<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.lang.Object executeFunction(java.lang.Class,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.support.lob.PassThroughClob: int setString(long,java.lang.String,int,int)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.MapSqlParameterSource: void <init>(java.lang.String,java.lang.Object)> ->_CWE089_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.lang.String getUsername()> ->_CWE089_
<org.springframework.jdbc.core.ResultSetSupportingSqlParameter: void <init>(java.lang.String,int,int)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.Object getObject(java.lang.String)> ->_CWE089_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getDataSource()> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(org.springframework.jdbc.core.StatementCallback)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String,java.lang.Object[],int[])> ->_CWE089_
<org.springframework.jdbc.datasource.embedded.H2EmbeddedDatabaseConfigurer: void configureConnectionProperties(org.springframework.jdbc.datasource.embedded.ConnectionProperties,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: java.lang.String parameterNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.lookup.BeanFactoryDataSourceLookup: javax.sql.DataSource getDataSource(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.SqlServerMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.util.Map queryForMap(java.lang.String,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object queryForObject(java.lang.String,java.lang.Object[],java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.SybaseMaxValueIncrementer: java.lang.String getIdentityStatement()> ->_CWE089_
<org.springframework.jdbc.core.namedparam.EmptySqlParameterSource: int getSqlType(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.util.List query(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Date getDate(java.lang.String)> ->_CWE089_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.Enum getEnum(org.springframework.core.'annotation'.AnnotationAttributes,java.lang.String,java.lang.Enum,java.lang.Enum)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object query(java.lang.String,org.springframework.jdbc.core.ResultSetExtractor,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator: java.lang.String buildMessage(java.lang.String,java.lang.String,java.sql.SQLException)> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(long,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String lowerCase(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.EmptySqlParameterSource: boolean hasValue(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void query(java.lang.String,org.springframework.jdbc.core.RowCallbackHandler)> ->_CWE089_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: void query(java.lang.String,org.springframework.jdbc.core.RowCallbackHandler)> ->_CWE089_
<org.springframework.jdbc.core.JdbcOperationsExtensionsKt: java.lang.Object queryForObject(org.springframework.jdbc.core.JdbcOperations,java.lang.String,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.util.Map doExecute(java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.MapSqlParameterSource: org.springframework.jdbc.core.namedparam.MapSqlParameterSource addValue(java.lang.String,java.lang.Object,int,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.embedded.DerbyEmbeddedDatabaseConfigurer: void configureConnectionProperties(org.springframework.jdbc.datasource.embedded.ConnectionProperties,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(int,int)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.util.List queryForList(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object query(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.core.ResultSetExtractor)> ->_CWE089_
<org.springframework.jdbc.core.support.JdbcBeanDefinitionReader: void loadBeanDefinitions(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.util.Map execute(org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: void query(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.RowCallbackHandler)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List query(java.lang.String,org.springframework.jdbc.core.PreparedStatementSetter,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: java.lang.String procedureNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: java.lang.String catalogNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.stream.Stream queryForStream(java.lang.String,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.test.jdbc.JdbcTestUtils: void dropTables(org.springframework.jdbc.core.JdbcTemplate,java.lang.String[])> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: java.lang.Number executeAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator: void setDatabaseProductName(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.SqlServerCallMetaDataProvider: java.lang.String parameterNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: int update(java.lang.String,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.util.Map doExecute(org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.AbstractSqlParameterSource: void registerSqlType(java.lang.String,int)> ->_CWE089_
<org.springframework.r2dbc.connection.init.ScriptUtils: org.reactivestreams.Publisher lambda$executeSqlScript$3(java.util.concurrent.atomic.AtomicInteger,io.r2dbc.spi.Connection,org.springframework.core.io.support.EncodedResource,boolean,boolean,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.InvalidResultSetAccessException: java.lang.String getSql()> ->_CWE089_
<org.springframework.jdbc.core.metadata.HsqlTableMetaDataProvider: java.lang.String getSimpleQueryForGetGeneratedKey(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object queryForObject(java.lang.String,java.util.Map,java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getColumnTypeName(int)> ->_CWE089_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: int update(java.lang.String,java.lang.Object[],int[])> ->_CWE089_
<org.springframework.jdbc.datasource.WebSphereDataSourceAdapter: java.sql.Connection doGetConnection(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.SqlServerCallMetaDataProvider: boolean byPassReturnParameter(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Timestamp getTimestamp(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(org.springframework.jdbc.core.PreparedStatementCreator,org.springframework.jdbc.core.PreparedStatementCallback)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.SybaseMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: java.lang.String metaDataSchemaNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar)> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: java.lang.Number executeAndReturnKey(java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: java.lang.String getUserName()> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptUtils: boolean startsWithAny(java.lang.String,java.lang.String[],int)> ->_CWE089_
<org.springframework.jdbc.core.SqlOutParameter: void <init>(java.lang.String,int,java.lang.String,org.springframework.jdbc.core.SqlReturnType)> ->_CWE089_
<org.springframework.jdbc.support.lob.PassThroughClob: java.lang.String getSubString(long,int)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getSchemaName(int)> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptUtils: void executeSqlScript(java.sql.Connection,org.springframework.core.io.support.EncodedResource,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: int[] doExecuteBatch(org.springframework.jdbc.core.namedparam.SqlParameterSource[])> ->_CWE089_
<org.springframework.jdbc.object.SqlUpdate: int update(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: org.springframework.jdbc.core.PreparedStatementCreator getPreparedStatementCreator(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,java.util.function.Consumer)> ->_CWE089_
<org.springframework.jdbc.core.metadata.OracleCallMetaDataProvider: java.lang.String metaDataCatalogNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.H2SequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptUtils: java.lang.String readScript(java.io.LineNumberReader,java.lang.String[],java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.lang.String getCallString()> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.lang.Object executeFunction(java.lang.Class,org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.UncategorizedSQLException: java.lang.String getSql()> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(int,int,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: int getInt(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: java.lang.String metaDataSchemaNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.String getInsertString()> ->_CWE089_
<org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener: void executeSqlScripts(org.springframework.test.context.TestContext,org.springframework.test.context.jdbc.Sql$ExecutionPhase)> ->_CWE089_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getString(org.springframework.core.'annotation'.AnnotationAttributes,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.Map queryForMap(java.lang.String,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.support.incrementer.SqlServerMaxValueIncrementer: java.lang.String getIncrementStatement()> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: float getFloat(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: int doExecute(org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.HsqlMaxValueIncrementer: java.lang.String getIdentityStatement()> ->_CWE089_
<org.springframework.jdbc.core.metadata.PostgresCallMetaDataProvider: java.lang.String metaDataSchemaNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List executeByNamedParam(java.util.Map)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.AbstractSequenceMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.r2dbc.connection.init.ScriptUtils: reactor.core.publisher.Mono executeSqlScript(io.r2dbc.spi.Connection,org.springframework.core.io.support.EncodedResource,org.springframework.core.io.buffer.DataBufferFactory,boolean,boolean,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: int[] executeBatch(java.util.Map[])> ->_CWE089_
<org.springframework.jdbc.support.incrementer.SqlServerMaxValueIncrementer: java.lang.String getIdentityStatement()> ->_CWE089_
<org.springframework.jdbc.support.lob.AbstractLobHandler: java.io.Reader getClobAsCharacterStream(java.sql.ResultSet,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.HsqlSequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: int doExecute(java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterBatchUpdateUtils: int[] executeBatchUpdateWithNamedParameters(org.springframework.jdbc.core.namedparam.ParsedSql,org.springframework.jdbc.core.namedparam.SqlParameterSource[],org.springframework.jdbc.core.JdbcOperations)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: org.springframework.dao.DataAccessException translateException(java.lang.String,java.lang.String,java.sql.SQLException)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.Map queryForMap(java.lang.String,java.lang.Object[],int[])> ->_CWE089_
<org.springframework.jdbc.support.SQLStateSQLExceptionTranslator: org.springframework.dao.DataAccessException doTranslate(java.lang.String,java.lang.String,java.sql.SQLException)> ->_CWE089_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getEncoding()> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.lang.Object findObject(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.SybaseMaxValueIncrementer: java.lang.String getIncrementStatement()> ->_CWE089_
<org.springframework.jdbc.support.JdbcAccessor: void setDatabaseProductName(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List query(java.lang.String,java.lang.Object[],org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener: void lambda$executeSqlScripts$0(org.springframework.test.context.jdbc.Sql$ExecutionPhase,org.springframework.test.context.TestContext,boolean,org.springframework.test.context.jdbc.Sql)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: org.springframework.jdbc.support.KeyHolder doExecuteAndReturnKeyHolder(org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String createCallString()> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: void query(java.lang.String,java.lang.Object[],org.springframework.jdbc.core.RowCallbackHandler)> ->_CWE089_
<org.springframework.test.jdbc.JdbcTestUtils: int deleteFromTables(org.springframework.jdbc.core.JdbcTemplate,java.lang.String[])> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.util.List queryForList(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.object.RdbmsOperation: void setGeneratedKeysColumnNames(java.lang.String[])> ->_CWE089_
<org.springframework.jdbc.core.namedparam.AbstractSqlParameterSource: int getSqlType(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.object.SqlCall: java.lang.String getCallString()> ->_CWE089_
<org.springframework.jdbc.core.metadata.OracleCallMetaDataProvider: java.lang.String metaDataSchemaNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.lang.Object executeFunction(java.lang.Class,java.lang.Object[])> ->_CWE089_
<org.springframework.r2dbc.connection.init.ScriptUtils: java.lang.String readScript(java.io.LineNumberReader,java.lang.String[],java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: org.springframework.jdbc.support.xml.SqlXmlValue newSqlXmlValue(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.util.List reconcileColumnsToUse(java.util.List,java.lang.String[])> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptParseException: void <init>(java.lang.String,org.springframework.core.io.support.EncodedResource)> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptUtils: java.lang.String readScript(org.springframework.core.io.support.EncodedResource,java.lang.String[],java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: int[] batchUpdate(java.lang.String,java.util.List)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object execute(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.core.PreparedStatementCallback)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: org.springframework.jdbc.core.SqlParameter createDefaultInParameter(java.lang.String,org.springframework.jdbc.core.metadata.CallParameterMetaData)> ->_CWE089_
<org.springframework.jdbc.core.BeanPropertyRowMapper: java.lang.String underscoreName(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.stream.Stream queryForStream(java.lang.String,org.springframework.jdbc.core.RowMapper,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter: java.sql.Connection doGetConnection(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getCatalogName(int)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.String getString(int)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List queryForList(java.lang.String,java.lang.Object[],int[])> ->_CWE089_
<org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator: org.springframework.dao.DataAccessException createCustomException(java.lang.String,java.lang.String,java.sql.SQLException,java.lang.Class)> ->_CWE089_
<org.springframework.r2dbc.core.ColumnMapRowMapper: java.lang.String getColumnKey(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptUtils: java.lang.String readScript(org.springframework.core.io.support.EncodedResource)> ->_CWE089_
<org.springframework.jdbc.core.SqlInOutParameter: void <init>(java.lang.String,int,int)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object query(java.lang.String,java.lang.Object[],org.springframework.jdbc.core.ResultSetExtractor)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.AbstractColumnMaxValueIncrementer: java.lang.String getColumnName()> ->_CWE089_
<org.springframework.jdbc.support.incrementer.PostgreSQLSequenceMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: long getLong(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.SqlInOutParameter: void <init>(java.lang.String,int,java.lang.String,org.springframework.jdbc.core.SqlReturnType)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: org.springframework.jdbc.support.KeyHolder doExecuteAndReturnKeyHolder(java.util.Map)> ->_CWE089_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: javax.xml.transform.Source getXmlAsSource(java.sql.ResultSet,java.lang.String,java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.DerbyMaxValueIncrementer: java.lang.String getIncrementStatement()> ->_CWE089_
<org.springframework.jdbc.core.metadata.Db2CallMetaDataProvider: java.lang.String metaDataSchemaNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.H2SequenceMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(java.lang.String,org.springframework.jdbc.core.PreparedStatementCallback)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.OracleSequenceMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.lang.String getSchemaName()> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.lang.Object findObject(java.lang.String,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.JdbcOperationsExtensionsKt: java.util.List queryForList(org.springframework.jdbc.core.JdbcOperations,java.lang.String,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.lang.String getProcedureName()> ->_CWE089_
<org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator: org.springframework.dao.DataAccessException doTranslate(java.lang.String,java.lang.String,java.sql.SQLException)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object execute(java.lang.String,org.springframework.jdbc.core.PreparedStatementCallback)> ->_CWE089_
<org.springframework.jdbc.core.JdbcOperationsExtensionsKt: java.util.List query(org.springframework.jdbc.core.JdbcOperations,java.lang.String,java.lang.Object[],kotlin.jvm.functions.Function2)> ->_CWE089_
<org.springframework.jdbc.core.JdbcOperationsExtensionsKt: java.lang.Object query(org.springframework.jdbc.core.JdbcOperations,java.lang.String,java.lang.Object[],kotlin.jvm.functions.Function1)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List queryForList(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.DB2SequenceMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.SqlOutParameter: void <init>(java.lang.String,int,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptUtils: java.lang.String readScript(java.io.LineNumberReader,java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Date getDate(java.lang.String,java.util.Calendar)> ->_CWE089_
<org.springframework.jdbc.support.CustomSQLExceptionTranslatorRegistry: org.springframework.jdbc.support.SQLExceptionTranslator findTranslatorForDatabase(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(java.lang.String,org.springframework.jdbc.core.CallableStatementCallback)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.util.List queryForList(java.lang.String,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterUtils: java.lang.String substituteNamedParameters(org.springframework.jdbc.core.namedparam.ParsedSql,org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.SybaseAnywhereMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: int[] batchUpdate(java.lang.String,java.util.List,int[])> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: void addDeclaredRowMapper(java.lang.String,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.SqlInOutParameter: void <init>(java.lang.String,int)> ->_CWE089_
<org.springframework.jdbc.datasource.embedded.DerbyEmbeddedDatabaseConfigurer: void shutdown(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.SqlInOutParameter: void <init>(java.lang.String,int,org.springframework.jdbc.core.ResultSetExtractor)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.String getSchemaName()> ->_CWE089_
<org.springframework.jdbc.core.SqlInOutParameter: void <init>(java.lang.String,int,org.springframework.jdbc.core.RowCallbackHandler)> ->_CWE089_
<org.springframework.jdbc.datasource.embedded.AbstractEmbeddedDatabaseConfigurer: void shutdown(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: org.springframework.jdbc.core.SqlParameter createDefaultOutParameter(java.lang.String,org.springframework.jdbc.core.metadata.CallParameterMetaData)> ->_CWE089_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: java.io.Reader getXmlAsCharacterStream(java.sql.ResultSet,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptUtils: void executeSqlScript(java.sql.Connection,org.springframework.core.io.support.EncodedResource,boolean,boolean,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator: org.springframework.dao.DataAccessException translate(java.lang.String,java.lang.String,java.sql.SQLException)> ->_CWE089_
<org.springframework.jdbc.core.metadata.PostgresCallMetaDataProvider: org.springframework.jdbc.core.SqlParameter createDefaultOutParameter(java.lang.String,org.springframework.jdbc.core.metadata.CallParameterMetaData)> ->_CWE089_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.lang.String getCatalogName()> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: void initializeWithTableColumnMetaData(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.SqlInOutParameter: void <init>(java.lang.String,int,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener: java.lang.String detectDefaultScript(org.springframework.test.context.TestContext,boolean)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: boolean getBoolean(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List query(java.lang.String,org.springframework.jdbc.core.RowMapper,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.support.incrementer.HsqlSequenceMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.init.UncategorizedScriptException: void <init>(java.lang.String,java.lang.Throwable)> ->_CWE089_
<org.springframework.r2dbc.connection.init.ScriptUtils: java.lang.String readScript(java.io.LineNumberReader,java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.lang.String getUrl()> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: org.springframework.jdbc.support.KeyHolder executeAndReturnKeyHolder(org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.util.List queryForList(java.lang.String,java.util.Map,java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object query(java.lang.String,org.springframework.jdbc.core.PreparedStatementSetter,org.springframework.jdbc.core.ResultSetExtractor)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.util.Map queryForMap(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: double getDouble(java.lang.String)> ->_CWE089_
<org.springframework.test.jdbc.JdbcTestUtils: int countRowsInTableWhere(org.springframework.jdbc.core.JdbcTemplate,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.HanaSequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> ->_CWE089_
<org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String getFunctionReturnName()> ->_CWE089_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: java.lang.String getXmlAsString(java.sql.ResultSet,int)> ->_CWE089_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: java.lang.String getXmlAsString(java.sql.ResultSet,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: java.lang.String catalogNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object query(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.ResultSetExtractor)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.Map queryForMap(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.String getString(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: int findColumn(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.lang.Object executeObject(java.lang.Class,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.object.MappingSqlQuery: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.AbstractSqlParameterSource: void registerTypeName(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallParameterMetaData: java.lang.String getTypeName()> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: void initializeWithProcedureColumnMetaData(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: java.lang.String tableNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: void <init>(java.lang.String,boolean)> ->_CWE089_
<org.springframework.test.jdbc.JdbcTestUtils: int deleteFromTableWhere(org.springframework.jdbc.core.JdbcTemplate,java.lang.String,java.lang.String,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: org.springframework.jdbc.core.SqlParameter createReturnResultSetParameter(java.lang.String,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: java.lang.String getDefaultSchema()> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: org.springframework.jdbc.support.KeyHolder executeAndReturnKeyHolder(java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.JdbcOperationsExtensionsKt: java.util.List queryForList(org.springframework.jdbc.core.JdbcOperations,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.HsqlMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.object.StoredProcedure: java.util.Map execute(java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object queryForObject(java.lang.String,java.util.Map,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object queryForObject(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.Db2MainframeMaxValueIncrementer: java.lang.String getSequenceQuery()> ->_CWE089_
<org.springframework.r2dbc.connection.init.ScriptUtils: reactor.core.publisher.Mono executeSqlScript(io.r2dbc.spi.Connection,org.springframework.core.io.support.EncodedResource,org.springframework.core.io.buffer.DataBufferFactory,boolean,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.Object getObject(java.lang.String,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.config.DatabasePopulatorConfigUtils: java.lang.String getSeparator(org.w3c.dom.Element,org.w3c.dom.Element)> ->_CWE089_
<org.springframework.jdbc.object.RdbmsOperation: java.lang.String getSql()> ->_CWE089_
<org.springframework.jdbc.core.namedparam.MapSqlParameterSource: org.springframework.jdbc.core.namedparam.MapSqlParameterSource addValue(java.lang.String,java.lang.Object)> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(java.lang.String,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(long)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Time getTime(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.EmptySqlParameterSource: java.lang.String getTypeName(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.SybaseCallMetaDataProvider: boolean byPassReturnParameter(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.support.SqlLobValue: void <init>(java.lang.String,org.springframework.jdbc.support.lob.LobHandler)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object queryForObject(java.lang.String,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.lang.String getSchemaName()> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object queryForObject(java.lang.String,java.lang.Class,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder addScripts(java.lang.String[])> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterUtils: org.springframework.jdbc.core.SqlParameter findParameter(java.util.List,java.lang.String,int)> ->_CWE089_
<org.springframework.jdbc.support.lob.PassThroughClob: void <init>(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.PostgresSequenceMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.Number doExecuteAndReturnKey(java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.ResultSetSupportingSqlParameter: void <init>(java.lang.String,int,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.util.stream.Stream queryForStream(java.lang.String,java.util.Map,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.MapSqlParameterSource: boolean hasValue(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.Db2LuwMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.Object lambda$executeInsertAndReturnKeyHolderInternal$1(java.util.List,java.lang.String,org.springframework.jdbc.support.KeyHolder,java.sql.Connection)> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.lang.Object executeObject(java.lang.Class,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.SybaseAnywhereMaxValueIncrementer: java.lang.String getIncrementStatement()> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.support.incrementer.Db2LuwMaxValueIncrementer: java.lang.String getSequenceQuery()> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List query(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getBlockCommentStartDelimiter()> ->_CWE089_
<org.springframework.r2dbc.connection.init.ScriptParseException: java.lang.String buildMessage(java.lang.String,org.springframework.core.io.support.EncodedResource)> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptStatementFailedException: void <init>(java.lang.String,int,org.springframework.core.io.support.EncodedResource,java.lang.Throwable)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object query(java.lang.String,org.springframework.jdbc.core.ResultSetExtractor)> ->_CWE089_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getBlockCommentEndDelimiter()> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallParameterMetaData: void <init>(java.lang.String,int,int,java.lang.String,boolean)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.util.List query(java.lang.String,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.PostgresSequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> ->_CWE089_
<org.springframework.jdbc.support.incrementer.AbstractColumnMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: void setGeneratedKeyName(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.stream.Stream queryForStream(java.lang.String,org.springframework.jdbc.core.PreparedStatementSetter,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.object.BatchSqlUpdate: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource: boolean hasValue(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.object.StoredProcedure: java.util.Map execute(org.springframework.jdbc.core.ParameterMapper)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: void query(java.lang.String,org.springframework.jdbc.core.PreparedStatementSetter,org.springframework.jdbc.core.RowCallbackHandler)> ->_CWE089_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.lang.String getCatalog()> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: org.springframework.jdbc.core.SqlParameter createDefaultInOutParameter(java.lang.String,org.springframework.jdbc.core.metadata.CallParameterMetaData)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.DerbyMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: int execute(java.util.Map)> ->_CWE089_
<org.springframework.jdbc.datasource.embedded.HsqlEmbeddedDatabaseConfigurer: void configureConnectionProperties(org.springframework.jdbc.datasource.embedded.ConnectionProperties,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String createParameterBinding(org.springframework.jdbc.core.SqlParameter)> ->_CWE089_
<org.springframework.jdbc.core.BatchUpdateUtils: int[] executeBatchUpdate(java.lang.String,java.util.List,int[],org.springframework.jdbc.core.JdbcOperations)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object queryForObject(java.lang.String,java.lang.Object[],int[],org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List query(java.lang.String,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.support.SQLErrorCodes: java.lang.String getDatabaseProductName()> ->_CWE089_
<org.springframework.jdbc.object.RdbmsOperation: java.lang.String resolveSql()> ->_CWE089_
<org.springframework.jdbc.core.namedparam.ParsedSql: java.lang.String getOriginalSql()> ->_CWE089_
<org.springframework.jdbc.support.incrementer.DB2MainframeSequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.Number doExecuteAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptParseException: java.lang.String buildMessage(java.lang.String,org.springframework.core.io.support.EncodedResource)> ->_CWE089_
<org.springframework.r2dbc.connection.ConnectionFactoryUtils: java.lang.String buildMessage(java.lang.String,java.lang.String,io.r2dbc.spi.R2dbcException)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: void query(java.lang.String,org.springframework.jdbc.core.RowCallbackHandler,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.core.metadata.OracleTableMetaDataProvider: java.lang.String lookupDefaultSchema(java.sql.DatabaseMetaData)> ->_CWE089_
<org.springframework.jdbc.support.lob.AbstractLobHandler: java.io.InputStream getClobAsAsciiStream(java.sql.ResultSet,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.lang.String getPassword()> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String getProcedureName()> ->_CWE089_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getTransactionManager()> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getColumnName(int)> ->_CWE089_
<org.springframework.jdbc.datasource.lookup.SingleDataSourceLookup: javax.sql.DataSource getDataSource(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.SQLErrorCodesFactory: java.lang.String identify(javax.sql.DataSource)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: int[] batchUpdate(java.lang.String[])> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.util.Map execute(java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object execute(java.lang.String,java.util.Map,org.springframework.jdbc.core.PreparedStatementCallback)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: int[][] batchUpdate(java.lang.String,java.util.Collection,int,org.springframework.jdbc.core.ParameterizedPreparedStatementSetter)> ->_CWE089_
<org.springframework.jdbc.object.SqlUpdate: int update(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.lob.DefaultLobHandler: java.lang.String getClobAsString(java.sql.ResultSet,int)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.util.stream.Stream queryForStream(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List queryForList(java.lang.String,java.lang.Object[],int[],java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.datasource.init.UncategorizedScriptException: void <init>(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.object.StoredProcedure: java.util.Map execute(java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.core.SqlParameterValue: void <init>(int,java.lang.String,java.lang.Object)> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: int execute(org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource: int getSqlType(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.sql.Connection getConnectionFromDriver(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.DerbyMaxValueIncrementer: java.lang.String getIdentityStatement()> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getTableName(int)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.String getCatalogName()> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object queryForObject(java.lang.String,java.lang.Object[],int[],java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String getScalarOutParameterName()> ->_CWE089_
<org.springframework.jdbc.support.incrementer.DB2MainframeSequenceMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcOperationsExtensionsKt: java.util.List queryForList(org.springframework.jdbc.core.JdbcOperations,java.lang.String,java.lang.Object[],int[])> ->_CWE089_
<org.springframework.jdbc.datasource.lookup.MapDataSourceLookup: void <init>(java.lang.String,javax.sql.DataSource)> ->_CWE089_
<org.springframework.r2dbc.core.DefaultDatabaseClient: java.lang.String lambda$sql$0(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getColumnLabel(int)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.DerbyMaxValueIncrementer: java.lang.String getDummyName()> ->_CWE089_
<org.springframework.jdbc.datasource.lookup.MapDataSourceLookup: void addDataSource(java.lang.String,javax.sql.DataSource)> ->_CWE089_
<org.springframework.jdbc.support.JdbcUtils: java.lang.String lookupColumnName(java.sql.ResultSetMetaData,int)> ->_CWE089_
<org.springframework.jdbc.core.metadata.SybaseCallMetaDataProvider: java.lang.String parameterNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List executeByNamedParam(java.util.Map,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(int)> ->_CWE089_
<org.springframework.jdbc.core.JdbcOperationsExtensionsKt: java.lang.Object queryForObject(org.springframework.jdbc.core.JdbcOperations,java.lang.String,java.lang.Object[],int[])> ->_CWE089_
<org.springframework.jdbc.support.incrementer.HanaSequenceMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.AbstractSqlParameterSource: java.lang.String getTypeName(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterUtils: java.lang.String parseSqlStatementIntoString(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptParseException: void <init>(java.lang.String,org.springframework.core.io.support.EncodedResource,java.lang.Throwable)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List queryForList(java.lang.String,java.lang.Object[],java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.BadSqlGrammarException: java.lang.String getSql()> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(org.springframework.jdbc.core.ConnectionCallback)> ->_CWE089_
<org.springframework.orm.hibernate5.HibernateJdbcException: java.lang.String getSql()> ->_CWE089_
<org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler: java.io.InputStream getXmlAsBinaryStream(java.sql.ResultSet,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.lang.Object executeObject(java.lang.Class,org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.core.SqlOutParameter: void <init>(java.lang.String,int,int)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List queryForList(java.lang.String,java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.core.ColumnMapRowMapper: java.lang.String getColumnKey(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.lookup.JndiDataSourceLookup: javax.sql.DataSource getDataSource(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.lang.String getTableName()> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: short getShort(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String getCatalogName()> ->_CWE089_
<org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder addScript(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.Object getObject(java.lang.String,java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object execute(org.springframework.jdbc.core.CallableStatementCreator,org.springframework.jdbc.core.CallableStatementCallback)> ->_CWE089_
<org.springframework.jdbc.datasource.lookup.MapDataSourceLookup: javax.sql.DataSource getDataSource(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: int[] batchUpdate(java.lang.String,java.util.Map[])> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(int,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.String getNString(int)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.HsqlMaxValueIncrementer: java.lang.String getIncrementStatement()> ->_CWE089_
<org.springframework.jdbc.datasource.DelegatingDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.Db2MainframeMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterUtils: org.springframework.jdbc.core.namedparam.ParsedSql parseSqlStatement(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: org.springframework.jdbc.core.namedparam.ParsedSql getParsedSql(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.lang.String getSchema()> ->_CWE089_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.lang.String getSimpleQueryForGetGeneratedKey(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcOperationsExtensionsKt: java.lang.Object queryForObject(org.springframework.jdbc.core.JdbcOperations,java.lang.String,java.lang.Object[],kotlin.jvm.functions.Function2)> ->_CWE089_
<org.springframework.jdbc.object.MappingSqlQueryWithParameters: void <init>(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.sql.Time getTime(java.lang.String,java.util.Calendar)> ->_CWE089_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.lang.String createInsertString(java.lang.String[])> ->_CWE089_
<org.springframework.jdbc.core.metadata.OracleTableMetaDataProvider: void initializeWithTableColumnMetaData(java.sql.DatabaseMetaData,java.lang.String,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.lang.String getNString(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterUtils: java.lang.String substituteNamedParameters(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: byte getByte(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: int update(java.lang.String)> ->_CWE089_
<org.springframework.test.jdbc.JdbcTestUtils: int countRowsInTable(org.springframework.jdbc.core.JdbcTemplate,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.util.Map doExecute(java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.SqlInOutParameter: void <init>(java.lang.String,int,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.SqlParameterSourceUtils: java.lang.Object getTypedValue(org.springframework.jdbc.core.namedparam.SqlParameterSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource: java.lang.Object getValue(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.JdbcTransactionManager: void setDatabaseProductName(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object queryForObject(java.lang.String,java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.support.lob.AbstractLobHandler: java.lang.String getClobAsString(java.sql.ResultSet,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object queryForObject(java.lang.String,java.lang.Object[],org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.metadata.OracleCallMetaDataProvider: org.springframework.jdbc.core.SqlParameter createDefaultOutParameter(java.lang.String,org.springframework.jdbc.core.metadata.CallParameterMetaData)> ->_CWE089_
<org.springframework.test.context.jdbc.MergedSqlConfig: java.lang.String getSeparator()> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: org.springframework.jdbc.core.simple.SimpleJdbcCall returningResultSet(java.lang.String,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.support.SqlLobValue: void <init>(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: void setGeneratedKeyNames(java.lang.String[])> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: java.lang.String getTableName()> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterUtils: java.lang.Object[] buildValueArray(java.lang.String,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: void processMetaData(javax.sql.DataSource,java.util.List,java.lang.String[])> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.Object queryForObject(java.lang.String,org.springframework.jdbc.core.RowMapper,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.datasource.init.ScriptUtils: void splitSqlScript(org.springframework.core.io.support.EncodedResource,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.util.List)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List queryForList(java.lang.String,java.lang.Class,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.support.SQLErrorCodesFactory: org.springframework.jdbc.support.SQLErrorCodes getErrorCodes(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: int[] batchUpdate(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource[])> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.lang.String getSql(java.lang.Object)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.lang.String getCatalogName()> ->_CWE089_
<org.springframework.jdbc.core.metadata.DerbyCallMetaDataProvider: java.lang.String metaDataSchemaNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.JdbcUtils: java.lang.String resolveTypeName(int)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object queryForObject(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,java.lang.Class)> ->_CWE089_
<org.springframework.jdbc.object.BatchSqlUpdate: void <init>(javax.sql.DataSource,java.lang.String,int[])> ->_CWE089_
<org.springframework.jdbc.core.metadata.PostgresTableMetaDataProvider: java.lang.String getSimpleQueryForGetGeneratedKey(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.MapSqlParameterSource: java.lang.Object getValue(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.TableParameterMetaData: java.lang.String getParameterName()> ->_CWE089_
<org.springframework.jdbc.support.SQLErrorCodesFactory: org.springframework.jdbc.support.SQLErrorCodes registerDatabase(javax.sql.DataSource,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.datasource.init.DatabasePopulatorUtils: void execute(org.springframework.jdbc.datasource.init.DatabasePopulator,javax.sql.DataSource)> ->_CWE089_
<org.springframework.jdbc.config.DatabasePopulatorConfigUtils: org.springframework.beans.factory.config.BeanDefinition createDatabasePopulator(org.w3c.dom.Element,java.util.List,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.TableMetaDataContext: java.lang.String getSimulationQueryForGetGeneratedKey(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: int[] batchUpdate(java.lang.String,org.springframework.jdbc.core.BatchPreparedStatementSetter)> ->_CWE089_
<org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener: java.lang.String lambda$executeSqlScripts$3(org.springframework.test.context.TestContext,org.springframework.transaction.PlatformTransactionManager,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.AbstractDataFieldMaxValueIncrementer: java.lang.String getIncrementerName()> ->_CWE089_
<org.springframework.jdbc.support.lob.AbstractLobHandler: java.io.InputStream getBlobAsBinaryStream(java.sql.ResultSet,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallMetaDataContext: java.lang.String getSchemaName()> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: java.lang.String getSimpleQueryForGetGeneratedKey(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcCall: java.util.Map execute(java.util.Map)> ->_CWE089_
<org.springframework.jdbc.support.CustomSQLExceptionTranslatorRegistry: void registerTranslator(java.lang.String,org.springframework.jdbc.support.SQLExceptionTranslator)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: java.lang.String metaDataCatalogNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.SqlReturnResultSet: void <init>(java.lang.String,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: int update(java.lang.String,java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.SqlReturnResultSet: void <init>(java.lang.String,org.springframework.jdbc.core.RowCallbackHandler)> ->_CWE089_
<org.springframework.jdbc.support.lob.PassThroughClob: long position(java.lang.String,long)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.lang.Object query(java.lang.String,java.util.Map,org.springframework.jdbc.core.ResultSetExtractor)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: boolean byPassReturnParameter(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.SqlReturnResultSet: void <init>(java.lang.String,org.springframework.jdbc.core.ResultSetExtractor)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.MapSqlParameterSource: org.springframework.jdbc.core.namedparam.MapSqlParameterSource addValue(java.lang.String,java.lang.Object,int)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: org.springframework.jdbc.core.PreparedStatementCreator getPreparedStatementCreator(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.core.JdbcOperationsExtensionsKt: java.lang.Object queryForObject(org.springframework.jdbc.core.JdbcOperations,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.ResultSetSupportingSqlParameter: void <init>(java.lang.String,int,org.springframework.jdbc.core.RowCallbackHandler)> ->_CWE089_
<org.springframework.jdbc.core.SqlParameter: java.lang.String getName()> ->_CWE089_
<org.springframework.jdbc.core.ResultSetSupportingSqlParameter: void <init>(java.lang.String,int,org.springframework.jdbc.core.ResultSetExtractor)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.EmptySqlParameterSource: java.lang.Object getValue(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void query(java.lang.String,java.util.Map,org.springframework.jdbc.core.RowCallbackHandler)> ->_CWE089_
<org.springframework.jdbc.object.SqlQuery: java.util.List execute(java.lang.Object[],java.util.Map)> ->_CWE089_
<org.springframework.jdbc.core.metadata.CallParameterMetaData: java.lang.String getParameterName()> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: java.util.List queryForList(java.lang.String,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.core.SqlOutParameter: void <init>(java.lang.String,int,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.SqlOutParameter: void <init>(java.lang.String,int,org.springframework.jdbc.core.ResultSetExtractor)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.core.metadata.PostgresCallMetaDataProvider: boolean byPassReturnParameter(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer: java.lang.String getDeleteStatement(long[])> ->_CWE089_
<org.springframework.jdbc.support.lob.AbstractLobHandler: byte[] getBlobAsBytes(java.sql.ResultSet,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet: java.math.BigDecimal getBigDecimal(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.SqlOutParameter: void <init>(java.lang.String,int)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: java.lang.String getDatabaseVersion()> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider: java.lang.String schemaNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.SqlReturnUpdateCount: void <init>(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData: java.lang.String getColumnClassName(int)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: java.util.List query(java.lang.String,java.util.Map,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: int update(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.support.KeyHolder)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcCall: java.lang.String getScalarOutParameterName()> ->_CWE089_
<org.springframework.jdbc.support.SQLStateSQLExceptionTranslator: java.lang.String getSqlState(java.sql.SQLException)> ->_CWE089_
<org.springframework.jdbc.core.simple.SimpleJdbcInsert: int[] executeBatch(org.springframework.jdbc.core.namedparam.SqlParameterSource[])> ->_CWE089_
<org.springframework.jdbc.core.SqlParameter: java.lang.String getTypeName()> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: int update(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource)> ->_CWE089_
<org.springframework.jdbc.core.PreparedStatementCreatorFactory: org.springframework.jdbc.core.PreparedStatementCreator newPreparedStatementCreator(java.lang.String,java.lang.Object[])> ->_CWE089_
<org.springframework.jdbc.support.incrementer.OracleSequenceMaxValueIncrementer: java.lang.String getSequenceQuery()> ->_CWE089_
<org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: void query(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.core.RowCallbackHandler)> ->_CWE089_
<org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate: int update(java.lang.String,org.springframework.jdbc.core.namedparam.SqlParameterSource,org.springframework.jdbc.support.KeyHolder,java.lang.String[])> ->_CWE089_
<org.springframework.jdbc.core.metadata.OracleTableMetaDataProvider: java.lang.String getDefaultSchema()> ->_CWE089_
<org.springframework.jdbc.support.incrementer.DerbyMaxValueIncrementer: void <init>(javax.sql.DataSource,java.lang.String,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.lob.PassThroughClob: int setString(long,java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.JdbcTransactionManager: java.lang.RuntimeException translateException(java.lang.String,java.sql.SQLException)> ->_CWE089_
<org.springframework.jdbc.core.ResultSetSupportingSqlParameter: void <init>(java.lang.String,int)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: java.lang.String metaDataCatalogNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.core.JdbcTemplate: int update(java.lang.String,org.springframework.jdbc.core.PreparedStatementSetter)> ->_CWE089_
<org.springframework.jdbc.core.SqlOutParameter: void <init>(java.lang.String,int,org.springframework.jdbc.core.RowCallbackHandler)> ->_CWE089_
<org.springframework.jdbc.core.ResultSetSupportingSqlParameter: void <init>(java.lang.String,int,org.springframework.jdbc.core.RowMapper)> ->_CWE089_
<org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider: java.lang.String schemaNameToUse(java.lang.String)> ->_CWE089_
<org.springframework.jdbc.support.SQLExceptionSubclassTranslator: org.springframework.dao.DataAccessException doTranslate(java.lang.String,java.lang.String,java.sql.SQLException)> ->_CWE089_
<org.springframework.jdbc.core.simple.AbstractJdbcInsert: int[] doExecuteBatch(java.util.Map[])> ->_CWE089_
