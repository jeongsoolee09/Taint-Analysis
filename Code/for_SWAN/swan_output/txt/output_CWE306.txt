<org.springframework.r2dbc.connection.SingleConnectionFactory: io.r2dbc.spi.Connection getCloseSuppressingConnectionProxy(io.r2dbc.spi.Connection)> ->_CWE306_
<org.springframework.web.socket.messaging.WebSocketStompClient: org.springframework.util.concurrent.ListenableFuture connect(java.lang.String,org.springframework.web.socket.WebSocketHttpHeaders,org.springframework.messaging.simp.stomp.StompSessionHandler,java.lang.Object[])> ->_CWE306_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: javax.jms.TopicConnection doCreateTopicConnection(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.jdbc.datasource.embedded.H2EmbeddedDatabaseConfigurer: void configureConnectionProperties(org.springframework.jdbc.datasource.embedded.ConnectionProperties,java.lang.String)> ->_CWE306_
<org.springframework.jmx.access.ConnectorDelegate: javax.management.MBeanServerConnection connect(javax.management.remote.JMXServiceURL,java.util.Map,java.lang.String)> ->_CWE306_
<org.springframework.web.socket.sockjs.client.JettyXhrTransport: void connectInternal(org.springframework.web.socket.sockjs.client.TransportRequest,org.springframework.web.socket.WebSocketHandler,java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.sockjs.client.XhrClientSockJsSession,org.springframework.util.concurrent.SettableListenableFuture)> ->_CWE306_
<org.springframework.jca.cci.core.support.CciDaoSupport: javax.resource.cci.Connection getConnection()> ->_CWE306_
<org.springframework.messaging.rsocket.DefaultRSocketRequesterBuilder: org.springframework.messaging.rsocket.RSocketRequester$Builder rsocketConnector(org.springframework.messaging.rsocket.RSocketConnectorConfigurer)> ->_CWE306_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.web.socket.adapter.jetty.Jetty10WebSocketHandlerAdapter: void onWebSocketConnect(org.eclipse.jetty.websocket.api.Session)> ->_CWE306_
<org.springframework.jdbc.datasource.embedded.DerbyEmbeddedDatabaseConfigurer: void configureConnectionProperties(org.springframework.jdbc.datasource.embedded.ConnectionProperties,java.lang.String)> ->_CWE306_
<org.springframework.web.socket.handler.LoggingWebSocketHandlerDecorator: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> ->_CWE306_
<org.springframework.jdbc.datasource.DataSourceUtils: java.sql.Connection getTargetConnection(java.sql.Connection)> ->_CWE306_
<org.springframework.jdbc.datasource.DriverManagerDataSource: java.sql.Connection getConnectionFromDriver(java.util.Properties)> ->_CWE306_
<org.springframework.web.socket.handler.ExceptionWebSocketHandlerDecorator: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> ->_CWE306_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.jdbc.datasource.WebSphereDataSourceAdapter: java.sql.Connection doGetConnection(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy: java.sql.Connection getTransactionAwareConnectionProxy(javax.sql.DataSource)> ->_CWE306_
<org.springframework.jms.core.JmsTemplate: javax.jms.Connection getConnection(org.springframework.jms.connection.JmsResourceHolder)> ->_CWE306_
<org.springframework.jdbc.datasource.DataSourceUtils: java.sql.Connection getConnection(javax.sql.DataSource)> ->_CWE306_
<org.springframework.web.socket.handler.WebSocketHandlerDecorator: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> ->_CWE306_
<org.springframework.web.reactive.socket.adapter.JettyWebSocketHandlerAdapter: void onWebSocketConnect(org.eclipse.jetty.websocket.api.Session)> ->_CWE306_
<org.springframework.jdbc.datasource.JdbcTransactionObjectSupport: org.springframework.jdbc.datasource.ConnectionHolder getConnectionHolderForSavepoint()> ->_CWE306_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> ->_CWE306_
<org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter: java.sql.Connection doGetConnection(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.web.socket.messaging.WebSocketStompClient: org.springframework.util.concurrent.ListenableFuture connect(java.lang.String,org.springframework.web.socket.WebSocketHttpHeaders,org.springframework.messaging.simp.stomp.StompHeaders,org.springframework.messaging.simp.stomp.StompSessionHandler,java.lang.Object[])> ->_CWE306_
<org.springframework.jca.cci.connection.ConnectionFactoryUtils: javax.resource.cci.Connection getConnection(javax.resource.cci.ConnectionFactory,javax.resource.cci.ConnectionSpec)> ->_CWE306_
<org.springframework.web.socket.handler.LoggingWebSocketHandlerDecorator: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> ->_CWE306_
<org.springframework.jmx.access.MBeanClientInterceptor: java.lang.Object handleConnectFailure(org.aopalliance.intercept.MethodInvocation,java.lang.Exception)> ->_CWE306_
<org.springframework.jdbc.core.support.JdbcDaoSupport: java.sql.Connection getConnection()> ->_CWE306_
<org.springframework.messaging.tcp.reactor.ReactorNettyTcpClient: org.springframework.util.concurrent.ListenableFuture connect(org.springframework.messaging.tcp.TcpConnectionHandler,org.springframework.messaging.tcp.ReconnectStrategy)> ->_CWE306_
<org.springframework.r2dbc.core.DefaultDatabaseClient: io.r2dbc.spi.Connection createConnectionProxy(io.r2dbc.spi.Connection)> ->_CWE306_
<org.springframework.jdbc.datasource.SimpleDriverDataSource: java.sql.Connection getConnectionFromDriver(java.util.Properties)> ->_CWE306_
<org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport: void connectInternal(org.springframework.web.socket.sockjs.client.TransportRequest,org.springframework.web.socket.WebSocketHandler,java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.sockjs.client.XhrClientSockJsSession,org.springframework.util.concurrent.SettableListenableFuture)> ->_CWE306_
<org.springframework.jdbc.datasource.DataSourceTransactionManager: void prepareTransactionalConnection(java.sql.Connection,org.springframework.transaction.TransactionDefinition)> ->_CWE306_
<org.springframework.messaging.rsocket.DefaultRSocketRequesterBuilder: reactor.core.publisher.Mono connect(io.rsocket.transport.ClientTransport)> ->_CWE306_
<org.springframework.jms.connection.SingleConnectionFactory: javax.jms.Connection getSharedConnectionProxy(javax.jms.Connection)> ->_CWE306_
<org.springframework.test.web.reactive.server.DefaultWebTestClientBuilder: org.springframework.http.client.reactive.ClientHttpConnector initConnector()> ->_CWE306_
<org.springframework.messaging.tcp.reactor.ReactorNettyTcpClient: org.springframework.util.concurrent.ListenableFuture connect(org.springframework.messaging.tcp.TcpConnectionHandler)> ->_CWE306_
<org.springframework.r2dbc.core.DefaultDatabaseClientBuilder: org.springframework.r2dbc.core.DatabaseClient$Builder connectionFactory(io.r2dbc.spi.ConnectionFactory)> ->_CWE306_
<org.springframework.test.context.web.socket.MockServerContainer: javax.websocket.Session connectToServer(javax.websocket.Endpoint,javax.websocket.ClientEndpointConfig,java.net.URI)> ->_CWE306_
<org.springframework.jdbc.datasource.DataSourceUtils: int getConnectionSynchronizationOrder(javax.sql.DataSource)> ->_CWE306_
<org.springframework.orm.jpa.DefaultJpaDialect: org.springframework.jdbc.datasource.ConnectionHandle getJdbcConnection(javax.persistence.EntityManager,boolean)> ->_CWE306_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: javax.jms.Connection doCreateConnection(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.web.socket.messaging.WebSocketStompClient: org.springframework.util.concurrent.ListenableFuture connect(java.net.URI,org.springframework.web.socket.WebSocketHttpHeaders,org.springframework.messaging.simp.stomp.StompHeaders,org.springframework.messaging.simp.stomp.StompSessionHandler)> ->_CWE306_
<org.springframework.test.web.servlet.htmlunit.webdriver.WebConnectionHtmlUnitDriver: com.gargoylesoftware.htmlunit.WebConnection getWebConnection()> ->_CWE306_
<org.springframework.web.socket.handler.WebSocketHandlerDecorator: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> ->_CWE306_
<org.springframework.web.socket.sockjs.transport.handler.SockJsWebSocketHandler: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> ->_CWE306_
<org.springframework.web.socket.messaging.SubProtocolWebSocketHandler: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> ->_CWE306_
<org.springframework.jdbc.datasource.DataSourceUtils: boolean connectionEquals(org.springframework.jdbc.datasource.ConnectionHolder,java.sql.Connection)> ->_CWE306_
<org.springframework.r2dbc.connection.ConnectionFactoryUtils: boolean connectionEquals(org.springframework.r2dbc.connection.ConnectionHolder,io.r2dbc.spi.Connection)> ->_CWE306_
<org.springframework.jms.listener.AbstractPollingMessageListenerContainer: javax.jms.Connection getConnection(org.springframework.jms.connection.JmsResourceHolder)> ->_CWE306_
<org.springframework.web.socket.handler.ExceptionWebSocketHandlerDecorator: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> ->_CWE306_
<org.springframework.http.client.reactive.ReactorClientHttpConnector: reactor.core.publisher.Mono connect(org.springframework.http.HttpMethod,java.net.URI,java.util.function.Function)> ->_CWE306_
<org.springframework.jdbc.datasource.embedded.HsqlEmbeddedDatabaseConfigurer: void configureConnectionProperties(org.springframework.jdbc.datasource.embedded.ConnectionProperties,java.lang.String)> ->_CWE306_
<org.springframework.web.socket.handler.PerConnectionWebSocketHandler: void afterConnectionClosed(org.springframework.web.socket.WebSocketSession,org.springframework.web.socket.CloseStatus)> ->_CWE306_
<org.springframework.web.reactive.socket.client.UndertowWebSocketClient: io.undertow.websockets.client.WebSocketClient$ConnectionBuilder createConnectionBuilder(java.net.URI)> ->_CWE306_
<org.springframework.r2dbc.connection.ConnectionFactoryUtils: int getConnectionSynchronizationOrder(io.r2dbc.spi.ConnectionFactory)> ->_CWE306_
<org.springframework.web.socket.sockjs.client.DefaultTransportRequest: void connect(org.springframework.web.socket.WebSocketHandler,org.springframework.util.concurrent.SettableListenableFuture)> ->_CWE306_
<org.springframework.r2dbc.core.DefaultDatabaseClient: reactor.core.publisher.Flux inConnectionMany(java.util.function.Function)> ->_CWE306_
<org.springframework.jdbc.datasource.AbstractDriverBasedDataSource: java.sql.Connection getConnectionFromDriver(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.test.context.web.socket.MockServerContainer: javax.websocket.Session connectToServer(java.lang.Class,javax.websocket.ClientEndpointConfig,java.net.URI)> ->_CWE306_
<org.springframework.jdbc.datasource.SingleConnectionDataSource: java.sql.Connection getCloseSuppressingConnectionProxy(java.sql.Connection)> ->_CWE306_
<org.springframework.web.socket.adapter.jetty.JettyWebSocketHandlerAdapter: void onWebSocketConnect(org.eclipse.jetty.websocket.api.Session)> ->_CWE306_
<org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter: javax.jms.QueueConnection doCreateQueueConnection(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.r2dbc.connection.lookup.BeanFactoryConnectionFactoryLookup: io.r2dbc.spi.ConnectionFactory getConnectionFactory(java.lang.String)> ->_CWE306_
<org.springframework.messaging.rsocket.DefaultRSocketRequesterBuilder: reactor.core.publisher.Mono connectWebSocket(java.net.URI)> ->_CWE306_
<org.springframework.web.socket.sockjs.transport.handler.SockJsWebSocketHandler: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> ->_CWE306_
<org.springframework.jca.cci.connection.SingleConnectionFactory: javax.resource.cci.Connection getCloseSuppressingConnectionProxy(javax.resource.cci.Connection)> ->_CWE306_
<org.springframework.jdbc.datasource.DelegatingDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.r2dbc.core.DefaultDatabaseClient: reactor.core.publisher.Mono inConnection(java.util.function.Function)> ->_CWE306_
<org.springframework.web.socket.sockjs.client.WebSocketTransport: org.springframework.util.concurrent.ListenableFuture connect(org.springframework.web.socket.sockjs.client.TransportRequest,org.springframework.web.socket.WebSocketHandler)> ->_CWE306_
<org.springframework.web.socket.handler.PerConnectionWebSocketHandler: void afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)> ->_CWE306_
<org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.web.socket.sockjs.client.AbstractXhrTransport: org.springframework.util.concurrent.ListenableFuture connect(org.springframework.web.socket.sockjs.client.TransportRequest,org.springframework.web.socket.WebSocketHandler)> ->_CWE306_
<org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy: javax.jms.Connection getTransactionAwareConnectionProxy(javax.jms.Connection)> ->_CWE306_
<org.springframework.jca.cci.connection.ConnectionFactoryUtils: boolean isConnectionTransactional(javax.resource.cci.Connection,javax.resource.cci.ConnectionFactory)> ->_CWE306_
<org.springframework.jca.cci.connection.TransactionAwareConnectionFactoryProxy: javax.resource.cci.Connection getTransactionAwareConnectionProxy(javax.resource.cci.Connection,javax.resource.cci.ConnectionFactory)> ->_CWE306_
<org.springframework.messaging.rsocket.DefaultRSocketRequesterBuilder: reactor.core.publisher.Mono connectTcp(java.lang.String,int)> ->_CWE306_
<org.springframework.messaging.rsocket.annotation.support.MessagingRSocket: reactor.core.publisher.Mono handleConnectionSetupPayload(io.rsocket.ConnectionSetupPayload)> ->_CWE306_
<org.springframework.web.socket.sockjs.client.UndertowXhrTransport: void connectInternal(org.springframework.web.socket.sockjs.client.TransportRequest,org.springframework.web.socket.WebSocketHandler,java.net.URI,org.springframework.http.HttpHeaders,org.springframework.web.socket.sockjs.client.XhrClientSockJsSession,org.springframework.util.concurrent.SettableListenableFuture)> ->_CWE306_
<org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup: void addConnectionFactory(java.lang.String,io.r2dbc.spi.ConnectionFactory)> ->_CWE306_
<org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource: java.sql.Connection getConnection(java.lang.String,java.lang.String)> ->_CWE306_
<org.springframework.web.reactive.socket.adapter.Jetty10WebSocketHandlerAdapter: void onWebSocketConnect(org.eclipse.jetty.websocket.api.Session)> ->_CWE306_
