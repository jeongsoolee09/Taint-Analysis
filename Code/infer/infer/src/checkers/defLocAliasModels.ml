let methods = [
    ("BeanContext", "addBeanContextMembershipListener")
  ; ("BeanContext", "removeBeanContextMembershipListener")
  ; ("BeanContextServices", "addService")
  ; ("BeanContextServices", "addBeanContextServicesListener")
  ; ("BeanContextServices", "removeBeanContextServicesListener")
  ; ("BlockingDeque", "add")
  ; ("BlockingDeque", "offer")
  ; ("BlockingDeque", "offer")
  ; ("BlockingDeque", "offerFirst")
  ; ("BlockingDeque", "offerFirst")
  ; ("BlockingDeque", "offerLast")
  ; ("BlockingDeque", "offerLast")
  ; ("BlockingDeque", "remove")
  ; ("BlockingDeque", "removeFirstOccurrence")
  ; ("BlockingDeque", "removeLastOccurrence")
  ; ("BlockingDeque", "addFirst")
  ; ("BlockingDeque", "addLast")
  ; ("BlockingDeque", "push")
  ; ("BlockingDeque", "put")
  ; ("BlockingDeque", "putFirst")
  ; ("BlockingDeque", "putLast")
  ; ("BlockingQueue", "add")
  ; ("BlockingQueue", "offer")
  ; ("BlockingQueue", "offer")
  ; ("BlockingQueue", "remove")
  ; ("BlockingQueue", "drainTo")
  ; ("BlockingQueue", "drainTo")
  ; ("BlockingQueue", "put")
  ; ("Deque", "add")
  ; ("Deque", "offer")
  ; ("Deque", "offerFirst")
  ; ("Deque", "offerLast")
  ; ("Deque", "remove")
  ; ("Deque", "removeFirstOccurrence")
  ; ("Deque", "removeLastOccurrence")
  ; ("Deque", "addFirst")
  ; ("Deque", "addLast")
  ; ("Deque", "push")
  ; ("List", "add")
  ; ("List", "addAll")
  ; ("List", "addAll")
  ; ("List", "remove")
  ; ("List", "removeAll")
  ; ("List", "retainAll")
  ; ("List", "replaceAll")
  ; ("List", "sort")
  ; ("List", "add")
  ; ("Queue", "add")
  ; ("Queue", "offer")
  ; ("Set", "add")
  ; ("Set", "addAll")
  ; ("Set", "remove")
  ; ("Set", "removeAll")
  ; ("Set", "retainAll")
  ; ("AbstractCollection", "add")
  ; ("AbstractCollection", "addAll")
  ; ("AbstractCollection", "remove")
  ; ("AbstractCollection", "removeAll")
  ; ("AbstractCollection", "retainAll")
  ; ("AbstractList", "add")
  ; ("AbstractList", "addAll")
  ; ("AbstractList", "removeRange")
  ; ("AbstractList", "add")
  ; ("AbstractQueue", "add")
  ; ("AbstractQueue", "addAll")
  ; ("AbstractSequentialList", "addAll")
  ; ("AbstractSequentialList", "add")
  ; ("AbstractSet", "removeAll")
  ; ("ArrayBlockingQueue", "add")
  ; ("ArrayBlockingQueue", "offer")
  ; ("ArrayBlockingQueue", "offer")
  ; ("ArrayBlockingQueue", "remove")
  ; ("ArrayBlockingQueue", "drainTo")
  ; ("ArrayBlockingQueue", "drainTo")
  ; ("ArrayBlockingQueue", "clear")
  ; ("ArrayBlockingQueue", "put")
  ; ("ArrayDeque", "add")
  ; ("ArrayDeque", "offer")
  ; ("ArrayDeque", "offerFirst")
  ; ("ArrayDeque", "offerLast")
  ; ("ArrayDeque", "remove")
  ; ("ArrayDeque", "removeFirstOccurrence")
  ; ("ArrayDeque", "removeLastOccurrence")
  ; ("ArrayDeque", "addFirst")
  ; ("ArrayDeque", "push")
  ; ("ArrayList", "add")
  ; ("ArrayList", "addAll")
  ; ("ArrayList", "addAll")
  ; ("ArrayList", "remove")
  ; ("ArrayList", "removeAll")
  ; ("ArrayList", "removeIf")
  ; ("ArrayList", "retainAll")
  ; ("ArrayList", "add")
  ; ("ArrayList", "clear")
  ; ("ArrayList", "ensureCapacity")
  ; ("ArrayList", "forEach")
  ; ("ArrayList", "replaceAll")
  ; ("ArrayList", "sort")
  ; ("ArrayList", "trimToSize")
  ; ("AttributeList", "add")
  ; ("AttributeList", "addAll")
  ; ("AttributeList", "addAll")
  ; ("AttributeList", "addAll")
  ; ("AttributeList", "addAll")
  ; ("AttributeList", "add")
  ; ("AttributeList", "add")
  ; ("AttributeList", "add")
  ; ("AttributeList", "set")
  ; ("BeanContextServicesSupport", "addService")
  ; ("BeanContextServicesSupport", "addService")
  ; ("BeanContextServicesSupport", "addBeanContextServicesListener")
  ; ("BeanContextServicesSupport", "initialize")
  ; ("BeanContextServicesSupport", "releaseService")
  ; ("BeanContextServicesSupport", "removeBeanContextServicesListener")
  ; ("BeanContextServicesSupport", "revokeService")
  ; ("BeanContextServicesSupport", "serviceAvailable")
  ; ("BeanContextServicesSupport", "serviceRevoked")
  ; ("BeanContextSupport", "add")
  ; ("BeanContextSupport", "addAll")
  ; ("BeanContextSupport", "remove")
  ; ("BeanContextSupport", "removeAll")
  ; ("BeanContextSupport", "retainAll")
  ; ("BeanContextSupport", "remove")
  ; ("BeanContextSupport", "validatePendingAdd")
  ; ("BeanContextSupport", "validatePendingRemove")
  ; ("BeanContextSupport", "bcsPreDeserializationHook")
  ; ("BeanContextSupport", "bcsPreSerializationHook")
  ; ("BeanContextSupport", "childDeserializedHook")
  ; ("BeanContextSupport", "childJustAddedHook")
  ; ("BeanContextSupport", "childJustRemovedHook")
  ; ("BeanContextSupport", "deserialize")
  ; ("BeanContextSupport", "fireChildrenAdded")
  ; ("BeanContextSupport", "fireChildrenRemoved")
  ; ("BeanContextSupport", "initialize")
  ; ("BeanContextSupport", "serialize")
  ; ("BeanContextSupport", "addBeanContextMembershipListener")
  ; ("BeanContextSupport", "clear")
  ; ("BeanContextSupport", "dontUseGui")
  ; ("BeanContextSupport", "okToUseGui")
  ; ("BeanContextSupport", "propertyChange")
  ; ("BeanContextSupport", "readChildren")
  ; ("BeanContextSupport", "removeBeanContextMembershipListener")
  ; ("BeanContextSupport", "setDesignTime")
  ; ("BeanContextSupport", "setLocale")
  ; ("BeanContextSupport", "vetoableChange")
  ; ("BeanContextSupport", "writeChildren")
  ; ("ConcurrentHashMap", "add")
  ; ("ConcurrentHashMap", "addAll")
  ; ("ConcurrentHashMap", "isEmpty")
  ; ("ConcurrentHashMap", "remove")
  ; ("ConcurrentHashMap", "removeAll")
  ; ("ConcurrentHashMap", "retainAll")
  ; ("ConcurrentHashMap", "clear")
  ; ("ConcurrentHashMap", "forEach")
  ; ("ConcurrentLinkedDeque", "add")
  ; ("ConcurrentLinkedDeque", "addAll")
  ; ("ConcurrentLinkedDeque", "offer")
  ; ("ConcurrentLinkedDeque", "offerFirst")
  ; ("ConcurrentLinkedDeque", "offerLast")
  ; ("ConcurrentLinkedDeque", "remove")
  ; ("ConcurrentLinkedDeque", "removeFirstOccurrence")
  ; ("ConcurrentLinkedDeque", "removeLastOccurrence")
  ; ("ConcurrentLinkedDeque", "addFirst")
  ; ("ConcurrentLinkedDeque", "addLast")
  ; ("ConcurrentLinkedDeque", "clear")
  ; ("ConcurrentLinkedDeque", "push")
  ; ("ConcurrentLinkedQueue", "add")
  ; ("ConcurrentLinkedQueue", "addAll")
  ; ("ConcurrentLinkedQueue", "offer")
  ; ("ConcurrentLinkedQueue", "remove")
  ; ("ConcurrentSkipListSet", "add")
  ; ("ConcurrentSkipListSet", "remove")
  ; ("ConcurrentSkipListSet", "removeAll")
  ; ("ConcurrentSkipListSet", "clear")
  ; ("CopyOnWriteArrayList", "add")
  ; ("CopyOnWriteArrayList", "addAll")
  ; ("CopyOnWriteArrayList", "addAll")
  ; ("CopyOnWriteArrayList", "addIfAbsent")
  ; ("CopyOnWriteArrayList", "remove")
  ; ("CopyOnWriteArrayList", "removeAll")
  ; ("CopyOnWriteArrayList", "removeIf")
  ; ("CopyOnWriteArrayList", "retainAll")
  ; ("CopyOnWriteArrayList", "add")
  ; ("CopyOnWriteArrayList", "clear")
  ; ("CopyOnWriteArrayList", "forEach")
  ; ("CopyOnWriteArrayList", "replaceAll")
  ; ("CopyOnWriteArrayList", "sort")
  ; ("CopyOnWriteArraySet", "add")
  ; ("CopyOnWriteArraySet", "addAll")
  ; ("CopyOnWriteArraySet", "remove")
  ; ("CopyOnWriteArraySet", "removeAll")
  ; ("CopyOnWriteArraySet", "removeIf")
  ; ("CopyOnWriteArraySet", "retainAll")
  ; ("CopyOnWriteArraySet", "clear")
  ; ("CopyOnWriteArraySet", "forEach")
  ; ("DelayQueue", "add")
  ; ("DelayQueue", "offer")
  ; ("DelayQueue", "offer")
  ; ("DelayQueue", "remove")
  ; ("DelayQueue", "drainTo")
  ; ("DelayQueue", "drainTo")
  ; ("DelayQueue", "clear")
  ; ("DelayQueue", "put")
  ; ("HashSet", "add")
  ; ("HashSet", "remove")
  ; ("JobStateReasons", "add")
  ; ("LinkedBlockingDeque", "add")
  ; ("LinkedBlockingDeque", "offer")
  ; ("LinkedBlockingDeque", "offer")
  ; ("LinkedBlockingDeque", "offerFirst")
  ; ("LinkedBlockingDeque", "offerFirst")
  ; ("LinkedBlockingDeque", "offerLast")
  ; ("LinkedBlockingDeque", "offerLast")
  ; ("LinkedBlockingDeque", "remove")
  ; ("LinkedBlockingDeque", "removeFirstOccurrence")
  ; ("LinkedBlockingDeque", "removeLastOccurrence")
  ; ("LinkedBlockingDeque", "drainTo")
  ; ("LinkedBlockingDeque", "drainTo")
  ; ("LinkedBlockingDeque", "addFirst")
  ; ("LinkedBlockingDeque", "addLast")
  ; ("LinkedBlockingDeque", "clear")
  ; ("LinkedBlockingDeque", "push")
  ; ("LinkedBlockingDeque", "put")
  ; ("LinkedBlockingDeque", "putFirst")
  ; ("LinkedBlockingDeque", "putLast")
  ; ("LinkedBlockingQueue", "offer")
  ; ("LinkedBlockingQueue", "offer")
  ; ("LinkedBlockingQueue", "remove")
  ; ("LinkedBlockingQueue", "drainTo")
  ; ("LinkedBlockingQueue", "drainTo")
  ; ("LinkedBlockingQueue", "clear")
  ; ("LinkedBlockingQueue", "put")
  ; ("LinkedList", "add")
  ; ("LinkedList", "addAll")
  ; ("LinkedList", "addAll")
  ; ("LinkedList", "offer")
  ; ("LinkedList", "offerFirst")
  ; ("LinkedList", "offerLast")
  ; ("LinkedList", "remove")
  ; ("LinkedList", "removeFirstOccurrence")
  ; ("LinkedList", "removeLastOccurrence")
  ; ("LinkedList", "add")
  ; ("LinkedList", "addFirst")
  ; ("LinkedList", "addLast")
  ; ("LinkedList", "clear")
  ; ("LinkedList", "push")
  ; ("LinkedTransferQueue", "add")
  ; ("LinkedTransferQueue", "offer")
  ; ("LinkedTransferQueue", "offer")
  ; ("LinkedTransferQueue", "remove")
  ; ("LinkedTransferQueue", "drainTo")
  ; ("LinkedTransferQueue", "drainTo")
  ; ("LinkedTransferQueue", "put")
  ; ("LinkedTransferQueue", "transfer")
  ; ("PriorityBlockingQueue", "add")
  ; ("PriorityBlockingQueue", "offer")
  ; ("PriorityBlockingQueue", "offer")
  ; ("PriorityBlockingQueue", "remove")
  ; ("PriorityBlockingQueue", "drainTo")
  ; ("PriorityBlockingQueue", "drainTo")
  ; ("PriorityBlockingQueue", "clear")
  ; ("PriorityBlockingQueue", "put")
  ; ("PriorityQueue", "add")
  ; ("PriorityQueue", "offer")
  ; ("PriorityQueue", "remove")
  ; ("PriorityQueue", "clear")
  ; ("RoleList", "add")
  ; ("RoleList", "addAll")
  ; ("RoleList", "addAll")
  ; ("RoleList", "addAll")
  ; ("RoleList", "addAll")
  ; ("RoleList", "add")
  ; ("RoleList", "add")
  ; ("RoleList", "add")
  ; ("RoleList", "set")
  ; ("RoleUnresolvedList", "add")
  ; ("RoleUnresolvedList", "addAll")
  ; ("RoleUnresolvedList", "addAll")
  ; ("RoleUnresolvedList", "addAll")
  ; ("RoleUnresolvedList", "addAll")
  ; ("RoleUnresolvedList", "add")
  ; ("RoleUnresolvedList", "add")
  ; ("RoleUnresolvedList", "add")
  ; ("RoleUnresolvedList", "set")
  ; ("SynchronousQueue", "offer")
  ; ("SynchronousQueue", "offer")
  ; ("SynchronousQueue", "remove")
  ; ("SynchronousQueue", "removeAll")
  ; ("SynchronousQueue", "retainAll")
  ; ("SynchronousQueue", "drainTo")
  ; ("SynchronousQueue", "drainTo")
  ; ("SynchronousQueue", "clear")
  ; ("SynchronousQueue", "put")
  ; ("TreeSet", "add")
  ; ("TreeSet", "addAll")
  ; ("TreeSet", "remove")
  ; ("TreeSet", "clear")
  ; ("Vector", "add")
  ; ("Vector", "addAll")
  ; ("Vector", "addAll")
  ; ("Vector", "remove")
  ; ("Vector", "removeAll")
  ; ("Vector", "removeElement")
  ; ("Vector", "removeIf")
  ; ("Vector", "retainAll")
  ; ("Vector", "add")
  ; ("Vector", "addElement")
  ; ("Vector", "clear")
  ; ("Vector", "copyInto")
  ; ("Vector", "ensureCapacity")
  ; ("Vector", "forEach")
  ; ("Vector", "insertElementAt")
  ; ("Vector", "removeAllElements")
  ; ("Vector", "removeElementAt")
  ; ("Vector", "replaceAll")
  ; ("Vector", "setElementAt")
  ; ("Vector", "setSize")
  ; ("Vector", "sort")
  ; ("Vector", "trimToSize")
  ; ("Set", "add")
  ; ("Set", "addAll")
  ; ("Set", "remove")
  ; ("Set", "removeAll")
  ; ("Set", "retainAll")
  ; ("Set", "clear")
  ; ("List", "add")
  ; ("List", "addAll")
  ; ("List", "addAll")
  ; ("List", "remove")
  ; ("List", "removeAll")
  ; ("List", "retainAll")
  ; ("List", "replaceAll")
  ; ("List", "sort")
  ; ("List", "add")
  ; ("List", "clear")
  ; ("Map", "put")
  ; ("Map", "replace")
  ; ("Map", "remove")
  ; ("Map", "replace")
  ; ("Map", "forEach")
  ; ("Map", "replaceAll")
  ; ("Map", "clear")
  ; ("Map", "putAll")
  ; ("HashSet", "add")
  ; ("HashSet", "remove")
  ; ("HashSet", "clear")
  ; ("TreeSet", "add")
  ; ("TreeSet", "addAll")
  ; ("TreeSet", "remove")
  ; ("TreeSet", "clear")
  ; ("ArrayList", "add")
  ; ("ArrayList", "addAll")
  ; ("ArrayList", "addAll")
  ; ("ArrayList", "remove")
  ; ("ArrayList", "removeAll")
  ; ("ArrayList", "removeIf")
  ; ("ArrayList", "retainAll")
  ; ("ArrayList", "removeRange")
  ; ("ArrayList", "add")
  ; ("ArrayList", "clear")
  ; ("ArrayList", "ensureCapacity")
  ; ("ArrayList", "forEach")
  ; ("ArrayList", "replaceAll")
  ; ("ArrayList", "sort")
  ; ("ArrayList", "trimToSize")
  ; ("LinkedList", "add")
  ; ("LinkedList", "addAll")
  ; ("LinkedList", "addAll")
  ; ("LinkedList", "offer")
  ; ("LinkedList", "offerFirst")
  ; ("LinkedList", "offerLast")
  ; ("LinkedList", "remove")
  ; ("LinkedList", "removeFirstOccurrence")
  ; ("LinkedList", "removeLastOccurrence")
  ; ("LinkedList", "add")
  ; ("LinkedList", "addFirst")
  ; ("LinkedList", "addLast")
  ; ("LinkedList", "clear")
  ; ("LinkedList", "push")
  ; ("Vector", "add")
  ; ("Vector", "addAll")
  ; ("Vector", "addAll")
  ; ("Vector", "remove")
  ; ("Vector", "removeAll")
  ; ("Vector", "removeElement")
  ; ("Vector", "removeIf")
  ; ("Vector", "retainAll")
  ; ("Vector", "removeRange")
  ; ("Vector", "add")
  ; ("Vector", "addElement")
  ; ("Vector", "clear")
  ; ("Vector", "copyInto")
  ; ("Vector", "ensureCapacity")
  ; ("Vector", "forEach")
  ; ("Vector", "insertElementAt")
  ; ("Vector", "removeAllElements")
  ; ("Vector", "removeElementAt")
  ; ("Vector", "replaceAll")
  ; ("Vector", "setElementAt")
  ; ("Vector", "setSize")
  ; ("Vector", "sort")
  ; ("Vector", "trimToSize")
  ; ("Collections", "sort")
  ; ("Collections", "copy")
  ; ("Collections", "fill")
  ; ("Collections", "sort")
  ; ("Collections", "reverse")
  ; ("Collections", "rotate")
  ; ("Collections", "shuffle")
  ; ("Collections", "shuffle")
  ; ("Collections", "swap")
  ; ("Arrays", "parallelPrefix")
  ; ("Arrays", "parallelPrefix")
  ; ("Arrays", "parallelSetAll")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "setAll")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "fill")
  ; ("Arrays", "parallelPrefix")
  ; ("Arrays", "parallelPrefix")
  ; ("Arrays", "parallelPrefix")
  ; ("Arrays", "parallelPrefix")
  ; ("Arrays", "parallelPrefix")
  ; ("Arrays", "parallelPrefix")
  ; ("Arrays", "parallelSetAll")
  ; ("Arrays", "parallelSetAll")
  ; ("Arrays", "parallelSetAll")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "parallelSort")
  ; ("Arrays", "setAll")
  ; ("Arrays", "setAll")
  ; ("Arrays", "setAll")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("Arrays", "sort")
  ; ("AbstractCollection", "add")
  ; ("AbstractCollection", "addAll")
  ; ("AbstractCollection", "remove")
  ; ("AbstractCollection", "removeAll")
  ; ("AbstractCollection", "retainAll")
  ; ("AbstractCollection", "clear")
]

